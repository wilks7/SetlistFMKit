{"interfaceLanguages":{"swift":[{"children":[{"title":"Articles","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fetching-setlist","title":"Getting started with Setlists","type":"article"},{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/init(apikey:appname:orginization:)","title":"init(apiKey: String, appName: String, orginization: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/baseurl","title":"let baseURL: String","type":"property"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/logger-vkb6","title":"let logger: Logger","type":"property"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/networklogger","title":"let networkLogger: Logger","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/getartist(mbid:)","title":"func getArtist(mbid: String) async throws -> FMArtist","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/getartistsetlists(mbid:pagenumber:)","title":"func getArtistSetlists(mbid: String, pageNumber: Int) async throws -> FMSetlistsResult","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/getcity(geoid:)","title":"func getCity(geoId: String) async throws -> FMCity","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/getsetlist(setlistid:)","title":"func getSetlist(setlistId: String) async throws -> FMSetlist","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/getsetlist(versionid:)","title":"func getSetlist(versionID: String) async throws -> FMSetlist","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/getvenue(venueid:)","title":"func getVenue(venueId: String) async throws -> FMVenue","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/getvenuesetlists(venueid:pagenumber:)","title":"func getVenueSetlists(venueId: String, pageNumber: Int) async throws -> FMSetlistsResult","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/makerequest(for:)","title":"func makeRequest(for: URL) -> URLRequest","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/searchartists(mbid:name:tmid:pagenumber:sortedby:)","title":"func searchArtists(mbid: String?, name: String?, tmid: Int?, pageNumber: Int, sortedBy: SortType) async throws -> ArtistResults","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/searchcities(country:name:pagenumber:state:statecode:)","title":"func searchCities(country: String?, name: String?, pageNumber: Int, state: String?, stateCode: String?) async throws -> CitiesResults","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/searchcountries()","title":"func searchCountries() async throws -> FMCountriesResult","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/searchsetlists(artistmbid:artistname:artisttmid:cityid:cityname:countrycode:date:lastfm:lastupdated:pagenumber:state:statecode:tourname:venueid:venuename:year:)","title":"func searchSetlists(artistMbid: String?, artistName: String?, artistTmid: Int?, cityId: String?, cityName: String?, countryCode: String?, date: String?, lastFM: String?, lastUpdated: String?, pageNumber: Int, state: String?, stateCode: String?, tourName: String?, venueId: String?, venueName: String?, year: String?) async throws -> FMSetlistsResult","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/searchvenues(cityid:cityname:country:name:pagenumber:state:statecode:)","title":"func searchVenues(cityId: String?, cityName: String?, country: String?, name: String?, pageNumber: Int, state: String?, stateCode: String?) async throws -> VenueResults","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/english","title":"case english","type":"case"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/french","title":"case french","type":"case"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/german","title":"case german","type":"case"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/italian","title":"case italian","type":"case"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/polish","title":"case polish","type":"case"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/portuguese","title":"case portuguese","type":"case"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/spanish","title":"case spanish","type":"case"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/turkish","title":"case turkish","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/setlistfmclient\/supportedlanguage","title":"SetlistFMClient.SupportedLanguage","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/log_level","title":"var log_level: [LogLevel]","type":"property"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/logger-6acjp","title":"var logger: Logger","type":"property"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/network_logger","title":"var network_logger: Logger","type":"property"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/session","title":"var session: URLSession","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/createurl(with:)","title":"func createURL(with: String) throws -> URL","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/fetch(_:endpoint:)","title":"func fetch<E, D>(E, endpoint: String) async throws -> D","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/fetch(endpoint:)","title":"func fetch<T>(endpoint: String) async throws -> T","type":"method"},{"path":"\/documentation\/setlistfmkit\/setlistfmclient\/fetch(url:)","title":"func fetch<T>(url: URL) async throws -> T","type":"method"}],"path":"\/documentation\/setlistfmkit\/setlistfmclient\/drillclient-implementations","title":"DrillClient Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/setlistfmclient","title":"SetlistFMClient","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmresult\/itemsperpage","title":"var itemsPerPage: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmresult\/page","title":"var page: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmresult\/total","title":"var total: Int","type":"property"}],"path":"\/documentation\/setlistfmkit\/fmresult","title":"FMResult","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/artistresults\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/artistresults\/artist","title":"let artist: [FMArtist]","type":"property"},{"path":"\/documentation\/setlistfmkit\/artistresults\/itemsperpage","title":"let itemsPerPage: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/artistresults\/page","title":"let page: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/artistresults\/total","title":"let total: Int","type":"property"}],"path":"\/documentation\/setlistfmkit\/artistresults","title":"ArtistResults","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/citiesresults\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/citiesresults\/cities","title":"let cities: [FMCity]","type":"property"},{"path":"\/documentation\/setlistfmkit\/citiesresults\/itemsperpage","title":"let itemsPerPage: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/citiesresults\/page","title":"let page: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/citiesresults\/total","title":"let total: Int","type":"property"}],"path":"\/documentation\/setlistfmkit\/citiesresults","title":"CitiesResults","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmartist\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmartist\/disambiguation","title":"var disambiguation: String?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmartist\/id-1o7cp","title":"var id: String","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmartist\/mbid","title":"let mbid: String","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmartist\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmartist\/sortname","title":"var sortName: String?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmartist\/url","title":"var url: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmartist\/phish","title":"static var Phish: FMArtist","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmartist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/fmartist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmartist\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/setlistfmkit\/fmartist\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmartist\/id-6o2i9","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/setlistfmkit\/fmartist\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/fmartist","title":"FMArtist","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcity\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcity\/coords","title":"let coords: FMCoords","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmcity\/country","title":"let country: FMCountry","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmcity\/id","title":"let id: String?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmcity\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmcity\/state","title":"let state: String?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmcity\/statecode","title":"let stateCode: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/fmcity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcity\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/setlistfmkit\/fmcity\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/fmcity","title":"FMCity","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcoords\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcoords\/lat","title":"let lat: Double","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmcoords\/long","title":"let long: Double","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcoords\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/fmcoords\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/fmcoords","title":"FMCoords","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcountriesresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcountriesresult\/country","title":"let country: [FMCountry]","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmcountriesresult\/itemsperpage","title":"let itemsPerPage: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmcountriesresult\/page","title":"let page: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmcountriesresult\/total","title":"let total: Int","type":"property"}],"path":"\/documentation\/setlistfmkit\/fmcountriesresult","title":"FMCountriesResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcountry\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcountry\/code","title":"let code: String","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmcountry\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmcountry\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/fmcountry\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/fmcountry","title":"FMCountry","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmset\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmset\/encore","title":"let encore: Int?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmset\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmset\/song","title":"let song: [FMSong]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/fmset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/fmset","title":"FMSet","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/artist","title":"let artist: FMArtist","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/eventdate","title":"let eventDate: Date","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/id-5v86i","title":"let id: String","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/info","title":"let info: String?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/lastfmeventid","title":"let lastFMEventId: Int?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/lastupdated","title":"let lastUpdated: String?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/sets","title":"let sets: FMSets?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/tour","title":"let tour: FMTour?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/url","title":"let url: String?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/venue","title":"let venue: FMVenue?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/versionid","title":"let versionId: String?","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/dateformat","title":"static var dateFormat: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/fmsetlist\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/setlistfmkit\/fmsetlist\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsetlist\/id-5mk91","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/setlistfmkit\/fmsetlist\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/fmsetlist","title":"FMSetlist","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsetlistsresult\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsetlistsresult\/itemsperpage","title":"let itemsPerPage: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlistsresult\/page","title":"let page: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlistsresult\/setlist","title":"let setlist: [FMSetlist]","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsetlistsresult\/total","title":"let total: Int","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsetlistsresult\/dateformat","title":"static var dateFormat: String","type":"property"}],"path":"\/documentation\/setlistfmkit\/fmsetlistsresult","title":"FMSetlistsResult","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsets\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsets\/set","title":"let set: [FMSet]","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsets\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/fmsets\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/fmsets","title":"FMSets","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsong\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsong\/cover","title":"let cover: FMArtist?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsong\/info","title":"let info: String?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsong\/name","title":"let name: String?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsong\/tape","title":"let tape: Bool?","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmsong\/with","title":"let with: FMArtist?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmsong\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/fmsong\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/fmsong","title":"FMSong","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmtour\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmtour\/name","title":"let name: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmtour\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/fmtour\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/fmtour","title":"FMTour","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmvenue\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmvenue\/city","title":"let city: FMCity","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmvenue\/id-4udlp","title":"let id: String","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmvenue\/name","title":"let name: String","type":"property"},{"path":"\/documentation\/setlistfmkit\/fmvenue\/url","title":"let url: String?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmvenue\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/fmvenue\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmvenue\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/setlistfmkit\/fmvenue\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/fmvenue\/id-7k5i5","title":"var id: ObjectIdentifier","type":"property"}],"path":"\/documentation\/setlistfmkit\/fmvenue\/identifiable-implementations","title":"Identifiable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/fmvenue","title":"FMVenue","type":"struct"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/sample\/phishsetlistsjson","title":"static let PhishSetlistsJSON: Data","type":"property"}],"path":"\/documentation\/setlistfmkit\/sample","title":"Sample","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/venueresults\/init(from:)","title":"init(from: Decoder) throws","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/venueresults\/itemsperpage","title":"let itemsPerPage: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/venueresults\/page","title":"let page: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/venueresults\/total","title":"let total: Int","type":"property"},{"path":"\/documentation\/setlistfmkit\/venueresults\/venue","title":"let venue: [FMVenue]","type":"property"}],"path":"\/documentation\/setlistfmkit\/venueresults","title":"VenueResults","type":"struct"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/sorttype\/relevance","title":"case relevance","type":"case"},{"path":"\/documentation\/setlistfmkit\/sorttype\/sortname","title":"case sortName","type":"case"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/sorttype\/init(rawvalue:)","title":"init?(rawValue: String)","type":"init"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/sorttype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/setlistfmkit\/sorttype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/sorttype\/hashvalue","title":"var hashValue: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/setlistfmkit\/sorttype\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/setlistfmkit\/sorttype\/rawrepresentable-implementations","title":"RawRepresentable Implementations","type":"symbol"}],"path":"\/documentation\/setlistfmkit\/sorttype","title":"SortType","type":"enum"}],"path":"\/documentation\/setlistfmkit","title":"SetlistFMKit","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}